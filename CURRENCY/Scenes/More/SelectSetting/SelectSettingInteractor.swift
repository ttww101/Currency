//
//  SelectSettingInteractor.swift
//  ExchangeHelper
//
//  Created by curry on 2019/04/23.
//  Copyright (c) 2018 Meiliang Wen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectSettingBusinessLogic {
  func fetchTitle(request: SelectSetting.FetchTitle.Request)
  func fetchOptions(request: SelectSetting.FetchSetting.Request)
  func selectOption(request: SelectSetting.Select.Request)
}

protocol SelectSettingDataStore {
  var setting: Setting? { get set }
}

class SelectSettingInteractor: SelectSettingBusinessLogic, SelectSettingDataStore {
  var presenter: SelectSettingPresentationLogic?
  var worker: SelectSettingWorker?

  var setting: Setting?

  // MARK: Fetch

  func fetchTitle(request: SelectSetting.FetchTitle.Request) {
    guard let setting = self.setting else {
      return
    }
    let response = SelectSetting.FetchTitle.Response(titleLocalizedKey: setting.localizedKey)
    presenter?.presentFetchedTitle(response: response)
  }

  func fetchOptions(request: SelectSetting.FetchSetting.Request) {
    //worker = SelectSettingWorker()
    //worker?.doSomeWork()
    guard let setting = self.setting else {
      return
    }
    let response = SelectSetting.FetchSetting.Response(setting: setting)
    presenter?.presentFetchedOptions(response: response)
  }

  func selectOption(request: SelectSetting.Select.Request) {
    let response = SelectSetting.Select.Response(chosen: request.chosen)
    presenter?.presentChosenOption(response: response)
  }
}
