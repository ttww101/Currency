//
//  ListSettingRouter.swift
//  CURRENCY
//
//  Created by Stan Liu on 22/02/2018.
//  Copyright (c) 2018 Stan Liu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListMoreRoutingLogic {
  //func routeToChooseLanguage(segue: UIStoryboardSegue?)
  func routeToSelectSetting(segue: UIStoryboardSegue?)
}

protocol ListMoreDataPassing {
  var dataStore: ListMoreDataStore? { get }
}

class ListMoreRouter: NSObject, ListMoreRoutingLogic, ListMoreDataPassing {
  weak var viewController: ListMoreViewController?
  var dataStore: ListMoreDataStore?

  // MARK: Routing

  //func routeToChooseLanguage(segue: UIStoryboardSegue?) {
  //  if let segue = segue {
  //    guard let destinationVC = segue.destination as? ChooseLanguageViewController,
  //      var destinationDS = destinationVC.router?.dataStore else {
  //      return
  //    }
  //    passDataToChooseLanguage(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    guard let destinationVC = R.storyboard.setting.chooseLanguageViewController(),
  //      var destinationDS = destinationVC.router?.dataStore else {
  //      return
  //    }
  //    passDataToChooseLanguage(source: dataStore!, destination: &destinationDS)
  //    navigateToChooseLanguage(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation

  //func navigateToChooseLanguage(source: ListMoreViewController,
  //                              destination: ChooseLanguageViewController) {
  //  source.show(destination, sender: nil)
  //}

  // MARK: Passing data

  //func passDataToChooseLanguage(source: ListMoreDataStore,
  //                              destination: inout ChooseLanguageDataStore) {
  //  destination.languages = source.languages
  //}

  // SelectSetting
  func routeToSelectSetting(segue: UIStoryboardSegue?) {
    if let segue = segue {
      guard let dataStore = dataStore,
        let destinationVC = segue.destination as? SelectSettingViewController,
        var destinationDS = destinationVC.router?.dataStore else {
          return
      }
      passDataToSelectSetting(source: dataStore, destination: &destinationDS)
    } else {
      guard let viewController = viewController,
        let dataStore = dataStore,
        let destinationVC = R.storyboard.more.selectSettingViewController(),
        var destinationDS = destinationVC.router?.dataStore else {
          return
      }
      passDataToSelectSetting(source: dataStore, destination: &destinationDS)
      navigateToSelectSetting(source: viewController, destination: destinationVC)
    }
  }

  // MARK: Navigation

  func navigateToSelectSetting(source: ListMoreViewController,
                               destination: SelectSettingViewController) {
    source.show(destination, sender: nil)
  }

  // MARK: Passing data

  func passDataToSelectSetting(source: ListMoreDataStore,
                               destination: inout SelectSettingDataStore) {
    guard let selectedRow = viewController?.tableView.indexPathForSelectedRow?.row,
      let settings = source.settings else {
      return
    }
    let setting = settings[selectedRow]
    destination.setting = setting
  }
}
