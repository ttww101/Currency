//
//  BankCurrencyModels.swift
//  CURRENCY
//
//  Created by Stan Liu on 27/03/2018.
//  Copyright (c) 2018 Stan Liu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum BankCurrency {
  // MARK: Use cases

  struct Bank: BankBasic, CarryFee, CarryImageURL {
    typealias CurrencyModel = (CurrencyBasic & CarryLastUpdate & CarryImageURL & HistoryBasic)
    var name: String
    var swiftCode: String
    var fee: String
    var imageURL: String?
    var currencies: [CurrencyModel]
  }
  struct Currency: CurrencyBasic, CarryLastUpdate, CarryImageURL, HistoryBasic {
    var name: String
    var buy: String
    var sell: String
    var lastUpdate: String
    var imageURL: String?
    var histories: [HistoryModelize]?
    var chartImage: UIImage?
  }

  enum ChangeSource {
    struct Request { }
    struct Response { }
    struct ViewModel { }
  }

  enum Fetch {
    struct Request {
      var exchangeType: ExchangeType
    }
    struct Response {
      var exchangeType: ExchangeType
      var bank: BankCurrency.Bank
    }
    struct ViewModel {
      var exchangeType: ExchangeType
      var displayBank: BankCurrency.Fetch.DisplayBank
    }

    struct DisplayBank: BankBasic, CarryFee, CarryImageURL {
      var name: String
      var swiftCode: String
      var fee: String
      var imageURL: String?
      var currencies: [DisplayCurrency]
    }
    struct DisplayCurrency: CurrencyBasic, CarryLastUpdate, CarryImageURL, HistoryBasic {
      var name: String
      var buy: String
      var sell: String
      var lastUpdate: String
      var imageURL: String?
      var histories: [HistoryModelize]? // for segue to next vc
      var chartImage: UIImage?
    }
  }

  enum HandleError {
    struct Request { }
    struct Response {
      var error: Error
    }
    struct ViewModel {
      var error: Error
    }
  }
}
