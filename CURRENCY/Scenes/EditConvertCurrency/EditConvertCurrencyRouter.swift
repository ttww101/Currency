//
//  EditConvertCurrencyRouter.swift
//  CURRENCY
//
//  Created by Stan Liu on 09/02/2018.
//  Copyright (c) 2018 Stan Liu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol EditConvertCurrencyRoutingLogic {
  func routeToConvertCurrency(segue: UIStoryboardSegue?)
}

protocol EditConvertCurrencyDataPassing {
  var dataStore: EditConvertCurrencyDataStore? { get }
}

class EditConvertCurrencyRouter: NSObject, EditConvertCurrencyRoutingLogic, EditConvertCurrencyDataPassing {
  weak var viewController: EditConvertCurrencyViewController?
  var dataStore: EditConvertCurrencyDataStore?

  // MARK: Routing
  func routeToConvertCurrency(segue: UIStoryboardSegue?) {
    if let segue = segue {
      guard let dataStore = dataStore,
        let sourceVC = viewController,
        let destinationVC = segue.destination as? ConvertCurrencyViewController,
        var destinationDS = destinationVC.router?.dataStore else {
          return
      }
      passDataToConvertCurrency(source: dataStore, destination: &destinationDS)
      navigateToConvertCurrency(source: sourceVC, destination: destinationVC)
    } else {
      guard let dataStore = dataStore,
        let sourceVC = viewController,
        let destinationVC = dataStore.listCurrencyVC,
        var destinationDS = destinationVC.router?.dataStore else {
          return
      }
      passDataToConvertCurrency(source: dataStore, destination: &destinationDS)
      navigateToConvertCurrency(source: sourceVC, destination: destinationVC)
    }
  }

  // MARK: Navigation

  func navigateToConvertCurrency(source: EditConvertCurrencyViewController,
                                 destination: ConvertCurrencyViewController) {
    source.dismiss(animated: true) {
      destination.isAppearFromEditFavorite = true
      destination.reloadEditedFavorite()
    }
  }

  // MARK: Passing data

  func passDataToConvertCurrency(source: EditConvertCurrencyDataStore,
                                 destination: inout ConvertCurrencyDataStore) {
    destination.favoriteCurrencyNameList = source.currencies.filter {
      return $0.isFavored == true
      }.map { return $0.name }
  }
}
