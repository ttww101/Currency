//
//  HistoryCurrencyPresenter.swift
//  ExchangeHelper
//
//  Created by wang on 2019/04/28.
//  Copyright (c) 2018 Meiliang Wen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryCurrencyPresentationLogic {
  func presentSeguePassedCurrency(response: HistoryCurrency.Load.Response)
  func presentFetchedCurrencyHistory(response: HistoryCurrency.Fetch.Response)
  func presentError(resopnse: Base.HandleError.Response)
}

class HistoryCurrencyPresenter: HistoryCurrencyPresentationLogic {
  weak var viewController: HistoryCurrencyDisplayLogic?

  // MARK: Present

  func presentSeguePassedCurrency(response: HistoryCurrency.Load.Response) {
    let viewModel = HistoryCurrency.Load.ViewModel(name: response.name)
    viewController?.displaySeguePassedCurrency(viewModel: viewModel)
  }

  func presentFetchedCurrencyHistory(response: HistoryCurrency.Fetch.Response) {
    let dates = response.histories.map { (history) -> String in
      return response.period == Period.today
        ? history.date.timeStringValue
        : history.date.dateStringValue
    }
    let rates = response.histories.map {
      return $0.close.decimalNumber
    }
    let viewModel = HistoryCurrency.Fetch.ViewModel(dates: dates, rates: rates)
    viewController?.displayFetchedCurrencyHistory(viewModel: viewModel)
  }

  func presentError(resopnse: Base.HandleError.Response) {
    let viewModel = Base.HandleError.ViewModel(error: resopnse.error)
    viewController?.displayError(viewModel: viewModel)
  }
}
