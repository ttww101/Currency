//
//  ListBankCurrencyPresenter.swift
//  ExchangeHelper
//
//  Created by Meiliang Wen on 27/03/2018.
//  Copyright (c) 2018 Meiliang Wen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListBankCurrencyPresentationLogic {
  func presentFetchedList(response: ListBankCurrency.FetchCurrencyList.Response)
  func presentError(response: Base.HandleError.Response)
}

class ListBankCurrencyPresenter: ListBankCurrencyPresentationLogic {
  weak var viewController: ListBankCurrencyDisplayLogic?

  // MARK: Present Fetched List

  func presentFetchedList(response: ListBankCurrency.FetchCurrencyList.Response) {
    var displayNameMaxWidth: CGFloat = 0
    let bankKey = LanguageDictionary().getBankLocalizedKey(from: response.bank.name)
    let localizedBankName = LanguageWorker.shared.localizedString(key: bankKey ?? response.bank.name, table: .listCurrency)
    let displayBank = BankCurrency.Fetch.DisplayBank(name: bankKey != nil ? localizedBankName : response.bank.name,
                                                     swiftCode: response.bank.swiftCode,
                                                     fee: response.bank.fee,
                                                     imageURL: response.bank.imageURL,
                                                     currencies: response.bank.currencies.map {
                                                      let localizedCurrencyName = LanguageWorker.shared.localizedString(key: $0.name,
                                                                                                                        table: .listCurrency)
                                                      let width = localizedCurrencyName.sizing(aliment: .left,
                                                                                               font: Configuration.Font.letterFont).width
                                                      displayNameMaxWidth = max(displayNameMaxWidth, width)
                                                      return BankCurrency.Fetch.DisplayCurrency(name: $0.name,
                                                                                                buy: $0.buy,
                                                                                                sell: $0.sell,
                                                                                                lastUpdate: $0.lastUpdate,
                                                                                                imageURL: $0.imageURL,
                                                                                                histories: $0.histories,
                                                                                                chartImage: $0.chartImage)
    })
    let viewModel = ListBankCurrency.FetchCurrencyList.ViewModel(displayBank: displayBank,
                                                                 displayNameMaxWidth: displayNameMaxWidth)
    viewController?.displayFetchedList(viewModel: viewModel)
  }

  func presentError(response: Base.HandleError.Response) {
    let viewModel = Base.HandleError.ViewModel(error: response.error)
    viewController?.displayError(viewModel: viewModel)
  }
}
