//

//  ListBankCurrencyInteractor.swift
//  ExchangeHelper
//
//  Created by Meiliang Wen on 27/03/2018.
//  Copyright (c) 2018 Meiliang Wen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListBankCurrencyBusinessLogic {
  func fetchCurrencyList(request: ListBankCurrency.FetchCurrencyList.Request)
  func updateBank(request: ListBankCurrency.Update.Request)
  func showError(request: Base.HandleError.Request)
}

protocol ListBankCurrencyDataStore {
  var exchange: ExchangeType? { get set }
  var bank: BankCurrency.Bank? { get set }
  var parentVC: BankCurrencyViewController? { get set }
}

class ListBankCurrencyInteractor: ListBankCurrencyBusinessLogic, ListBankCurrencyDataStore {
  var presenter: ListBankCurrencyPresentationLogic?
  var worker: ListBankCurrencyWorker?

  var exchange: ExchangeType?
  var bank: BankCurrency.Bank?
  weak var parentVC: BankCurrencyViewController?

  // MARK: Do something

  func fetchCurrencyList(request: ListBankCurrency.FetchCurrencyList.Request) {
    guard let bank = bank else { return }
    let response = ListBankCurrency.FetchCurrencyList.Response(bank: bank)
    presenter?.presentFetchedList(response: response)
  }

  func updateBank(request: ListBankCurrency.Update.Request) {
    guard var bank = bank,
      let index = request.index,
      let histories = request.histories,
      let chartImage = request.chartImage else { return }
    var currency = bank.currencies[index]
    currency.histories = histories
    currency.chartImage = chartImage
    bank.currencies[index] = currency
    self.bank = bank
  }

  func showError(request: Base.HandleError.Request) {
    let response = Base.HandleError.Response(error: request.error)
    presenter?.presentError(response: response)
  }
}
