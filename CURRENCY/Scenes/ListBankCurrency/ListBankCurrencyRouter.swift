//
//  ListBankCurrencyRouter.swift
//  CURRENCY
//
//  Created by Stan Liu on 27/03/2018.
//  Copyright (c) 2018 Stan Liu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListBankCurrencyRoutingLogic {
  //func routeToSomewhere(segue: UIStoryboardSegue?)
  func routeToUpdateBankCurrency()
}

protocol ListBankCurrencyDataPassing {
  var dataStore: ListBankCurrencyDataStore? { get }
}

class ListBankCurrencyRouter: NSObject, ListBankCurrencyRoutingLogic, ListBankCurrencyDataPassing {
  weak var viewController: ListBankCurrencyViewController?
  var dataStore: ListBankCurrencyDataStore?

  // MARK: Routing
  func routeToUpdateBankCurrency() {
    if let sourceDS = dataStore,
      let destinationVC = sourceDS.parentVC,
      var destinationDS = destinationVC.router?.dataStore {
      passDataToBankCurrency(source: sourceDS, destination: &destinationDS)
    }
  }

  //func routeToSomewhere(segue: UIStoryboardSegue?)
  //{
  //  if let segue = segue {
  //    let destinationVC = segue.destination as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
  //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //    navigateToSomewhere(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation

  //func navigateToSomewhere(source: ListBankCurrencyViewController, destination: SomewhereViewController)
  //{
  //  source.show(destination, sender: nil)
  //}

  // MARK: Passing data

  func passDataToBankCurrency(source: ListBankCurrencyDataStore, destination: inout BankCurrencyDataStore) {
    source.exchange == .cash
      ? (destination.cash = source.bank)
      : (destination.stock = source.bank)
  }

  //func passDataToSomewhere(source: ListBankCurrencyDataStore, destination: inout SomewhereDataStore)
  //{
  //  destination.name = source.name
  //}
}
